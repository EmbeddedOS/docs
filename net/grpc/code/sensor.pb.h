// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensor.proto
// Protobuf C++ Version: 6.31.0

#ifndef sensor_2eproto_2epb_2eh
#define sensor_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sensor_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sensor_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_sensor_2eproto;
}  // extern "C"
enum Level : int;
extern const uint32_t Level_internal_data_[];
class HomeSensorData;
struct HomeSensorDataDefaultTypeInternal;
extern HomeSensorDataDefaultTypeInternal _HomeSensorData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull HomeSensorData_class_data_;
class ReadReply;
struct ReadReplyDefaultTypeInternal;
extern ReadReplyDefaultTypeInternal _ReadReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReadReply_class_data_;
class ReadRequest;
struct ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReadRequest_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::Level_internal_data_>
    internal::EnumTraitsImpl::value<::Level>;
}  // namespace protobuf
}  // namespace google

enum Level : int {
  SENSOR_LEVEL_LOW = 0,
  SENSOR_LEVEL_MEDIUM = 2,
  SENSOR_LEVEL_HIGH = 4,
  Level_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Level_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Level_internal_data_[];
inline constexpr Level Level_MIN =
    static_cast<Level>(0);
inline constexpr Level Level_MAX =
    static_cast<Level>(4);
inline bool Level_IsValid(int value) {
  return 0 <= value && value <= 4 && ((21u >> value) & 1) != 0;
}
inline constexpr int Level_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Level_descriptor();
template <typename T>
const ::std::string& Level_Name(T value) {
  static_assert(::std::is_same<T, Level>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Level_Name().");
  return Level_Name(static_cast<Level>(value));
}
template <>
inline const ::std::string& Level_Name(Level value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Level_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool Level_Parse(
    ::absl::string_view name, Level* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Level>(Level_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class ReadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ReadRequest) */ {
 public:
  inline ReadRequest() : ReadRequest(nullptr) {}
  ~ReadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReadRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReadRequest(const ReadRequest& from) : ReadRequest(nullptr, from) {}
  inline ReadRequest(ReadRequest&& from) noexcept
      : ReadRequest(nullptr, ::std::move(from)) {}
  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadRequest& default_instance() {
    return *reinterpret_cast<const ReadRequest*>(
        &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ReadRequest& a, ReadRequest& b) { a.Swap(&b); }
  inline void Swap(ReadRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadRequest& from) { ReadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReadRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ReadRequest"; }

 protected:
  explicit ReadRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReadRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReadRequest& from);
  ReadRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReadRequest&& from) noexcept
      : ReadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSensorTypeFieldNumber = 2,
  };
  // int32 sensor_type = 2;
  bool has_sensor_type() const;
  void clear_sensor_type() ;
  ::int32_t sensor_type() const;
  void set_sensor_type(::int32_t value);

  private:
  ::int32_t _internal_sensor_type() const;
  void _internal_set_sensor_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ReadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReadRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t sensor_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReadRequest_class_data_;
// -------------------------------------------------------------------

class HomeSensorData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:HomeSensorData) */ {
 public:
  inline HomeSensorData() : HomeSensorData(nullptr) {}
  ~HomeSensorData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HomeSensorData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HomeSensorData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HomeSensorData(::google::protobuf::internal::ConstantInitialized);

  inline HomeSensorData(const HomeSensorData& from) : HomeSensorData(nullptr, from) {}
  inline HomeSensorData(HomeSensorData&& from) noexcept
      : HomeSensorData(nullptr, ::std::move(from)) {}
  inline HomeSensorData& operator=(const HomeSensorData& from) {
    CopyFrom(from);
    return *this;
  }
  inline HomeSensorData& operator=(HomeSensorData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HomeSensorData& default_instance() {
    return *reinterpret_cast<const HomeSensorData*>(
        &_HomeSensorData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HomeSensorData& a, HomeSensorData& b) { a.Swap(&b); }
  inline void Swap(HomeSensorData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HomeSensorData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HomeSensorData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HomeSensorData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HomeSensorData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HomeSensorData& from) { HomeSensorData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HomeSensorData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "HomeSensorData"; }

 protected:
  explicit HomeSensorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HomeSensorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HomeSensorData& from);
  HomeSensorData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, HomeSensorData&& from) noexcept
      : HomeSensorData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTemperatureFieldNumber = 1,
    kLightFieldNumber = 2,
  };
  // int32 temperature = 1;
  bool has_temperature() const;
  void clear_temperature() ;
  ::int32_t temperature() const;
  void set_temperature(::int32_t value);

  private:
  ::int32_t _internal_temperature() const;
  void _internal_set_temperature(::int32_t value);

  public:
  // int32 light = 2;
  bool has_light() const;
  void clear_light() ;
  ::int32_t light() const;
  void set_light(::int32_t value);

  private:
  ::int32_t _internal_light() const;
  void _internal_set_light(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:HomeSensorData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HomeSensorData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t temperature_;
    ::int32_t light_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull HomeSensorData_class_data_;
// -------------------------------------------------------------------

class ReadReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ReadReply) */ {
 public:
  inline ReadReply() : ReadReply(nullptr) {}
  ~ReadReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReadReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReadReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadReply(::google::protobuf::internal::ConstantInitialized);

  inline ReadReply(const ReadReply& from) : ReadReply(nullptr, from) {}
  inline ReadReply(ReadReply&& from) noexcept
      : ReadReply(nullptr, ::std::move(from)) {}
  inline ReadReply& operator=(const ReadReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadReply& operator=(ReadReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadReply& default_instance() {
    return *reinterpret_cast<const ReadReply*>(
        &_ReadReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ReadReply& a, ReadReply& b) { a.Swap(&b); }
  inline void Swap(ReadReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReadReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadReply& from) { ReadReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReadReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ReadReply"; }

 protected:
  explicit ReadReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReadReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReadReply& from);
  ReadReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReadReply&& from) noexcept
      : ReadReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHomeDataFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // .HomeSensorData home_data = 1;
  bool has_home_data() const;
  void clear_home_data() ;
  const ::HomeSensorData& home_data() const;
  [[nodiscard]] ::HomeSensorData* PROTOBUF_NULLABLE release_home_data();
  ::HomeSensorData* PROTOBUF_NONNULL mutable_home_data();
  void set_allocated_home_data(::HomeSensorData* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_home_data(::HomeSensorData* PROTOBUF_NULLABLE value);
  ::HomeSensorData* PROTOBUF_NULLABLE unsafe_arena_release_home_data();

  private:
  const ::HomeSensorData& _internal_home_data() const;
  ::HomeSensorData* PROTOBUF_NONNULL _internal_mutable_home_data();

  public:
  // .Level level = 2;
  bool has_level() const;
  void clear_level() ;
  ::Level level() const;
  void set_level(::Level value);

  private:
  ::Level _internal_level() const;
  void _internal_set_level(::Level value);

  public:
  // @@protoc_insertion_point(class_scope:ReadReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReadReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::HomeSensorData* PROTOBUF_NULLABLE home_data_;
    int level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReadReply_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ReadRequest

// int32 sensor_type = 2;
inline bool ReadRequest::has_sensor_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ReadRequest::clear_sensor_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ReadRequest::sensor_type() const {
  // @@protoc_insertion_point(field_get:ReadRequest.sensor_type)
  return _internal_sensor_type();
}
inline void ReadRequest::set_sensor_type(::int32_t value) {
  _internal_set_sensor_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:ReadRequest.sensor_type)
}
inline ::int32_t ReadRequest::_internal_sensor_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sensor_type_;
}
inline void ReadRequest::_internal_set_sensor_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_type_ = value;
}

// -------------------------------------------------------------------

// HomeSensorData

// int32 temperature = 1;
inline bool HomeSensorData::has_temperature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void HomeSensorData::clear_temperature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temperature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t HomeSensorData::temperature() const {
  // @@protoc_insertion_point(field_get:HomeSensorData.temperature)
  return _internal_temperature();
}
inline void HomeSensorData::set_temperature(::int32_t value) {
  _internal_set_temperature(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:HomeSensorData.temperature)
}
inline ::int32_t HomeSensorData::_internal_temperature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temperature_;
}
inline void HomeSensorData::_internal_set_temperature(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temperature_ = value;
}

// int32 light = 2;
inline bool HomeSensorData::has_light() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void HomeSensorData::clear_light() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.light_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t HomeSensorData::light() const {
  // @@protoc_insertion_point(field_get:HomeSensorData.light)
  return _internal_light();
}
inline void HomeSensorData::set_light(::int32_t value) {
  _internal_set_light(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:HomeSensorData.light)
}
inline ::int32_t HomeSensorData::_internal_light() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.light_;
}
inline void HomeSensorData::_internal_set_light(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.light_ = value;
}

// -------------------------------------------------------------------

// ReadReply

// .HomeSensorData home_data = 1;
inline bool ReadReply::has_home_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.home_data_ != nullptr);
  return value;
}
inline void ReadReply::clear_home_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.home_data_ != nullptr) _impl_.home_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::HomeSensorData& ReadReply::_internal_home_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::HomeSensorData* p = _impl_.home_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::HomeSensorData&>(::_HomeSensorData_default_instance_);
}
inline const ::HomeSensorData& ReadReply::home_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ReadReply.home_data)
  return _internal_home_data();
}
inline void ReadReply::unsafe_arena_set_allocated_home_data(
    ::HomeSensorData* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.home_data_);
  }
  _impl_.home_data_ = reinterpret_cast<::HomeSensorData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ReadReply.home_data)
}
inline ::HomeSensorData* PROTOBUF_NULLABLE ReadReply::release_home_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::HomeSensorData* released = _impl_.home_data_;
  _impl_.home_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::HomeSensorData* PROTOBUF_NULLABLE ReadReply::unsafe_arena_release_home_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ReadReply.home_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::HomeSensorData* temp = _impl_.home_data_;
  _impl_.home_data_ = nullptr;
  return temp;
}
inline ::HomeSensorData* PROTOBUF_NONNULL ReadReply::_internal_mutable_home_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.home_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::HomeSensorData>(GetArena());
    _impl_.home_data_ = reinterpret_cast<::HomeSensorData*>(p);
  }
  return _impl_.home_data_;
}
inline ::HomeSensorData* PROTOBUF_NONNULL ReadReply::mutable_home_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::HomeSensorData* _msg = _internal_mutable_home_data();
  // @@protoc_insertion_point(field_mutable:ReadReply.home_data)
  return _msg;
}
inline void ReadReply::set_allocated_home_data(::HomeSensorData* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.home_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.home_data_ = reinterpret_cast<::HomeSensorData*>(value);
  // @@protoc_insertion_point(field_set_allocated:ReadReply.home_data)
}

// .Level level = 2;
inline bool ReadReply::has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ReadReply::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::Level ReadReply::level() const {
  // @@protoc_insertion_point(field_get:ReadReply.level)
  return _internal_level();
}
inline void ReadReply::set_level(::Level value) {
  _internal_set_level(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:ReadReply.level)
}
inline ::Level ReadReply::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Level>(_impl_.level_);
}
inline void ReadReply::_internal_set_level(::Level value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Level> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::Level>() {
  return ::Level_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // sensor_2eproto_2epb_2eh
